{"version":3,"sources":["api/Errors.ts","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["ErrorMessages","MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","convertToMovieType","body","getMovie","title","a","fetch","then","res","json","Response","Error","NOT_FOUND","FindMovie","addMovie","inputRef","useRef","useState","setTitle","EMPTY","errorMsg","setErrorMsg","foundMovie","setFoundMovie","errorClass","addClassIsDanger","inputClasses","current","classList","contains","add","findMovie","useCallback","e","preventDefault","message","onSubmit","htmlFor","ref","type","id","placeholder","value","onChange","remove","removeClassIsDanger","target","onClick","ALREADY_EXISTS","App","state","findIndex","m","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41633238.chunk.js","sourcesContent":["export const enum ErrorMessages {\n  NOT_FOUND = 'Can\\'t find a movie with such a title',\n  ALREADY_EXISTS = 'This movie already has been added',\n  EMPTY = '',\n}\n","import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { ErrorMessages } from './Errors';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=b8686686&t=';\n\nconst convertToMovieType = (body: ResponceBody): Movie => ({\n  Poster: body.Poster,\n  Title: body.Title,\n  Plot: body.Plot,\n  imdbID: body.imdbID,\n});\n\nexport const getMovie = async (title: string): Promise<Movie> => {\n  const body: ResponceBody = await fetch(BASE_URL + title)\n    .then(res => res.json());\n\n  if (body.Response === 'True') {\n    return convertToMovieType(body);\n  }\n\n  throw new Error(ErrorMessages.NOT_FOUND);\n};\n","import React, { useCallback, useRef, useState } from 'react';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { ErrorMessages } from '../../api/Errors';\n\ntype Props = {\n  addMovie: (movie: Movie) => boolean;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState('');\n  const [errorMsg, setErrorMsg] = useState(ErrorMessages.EMPTY);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const errorClass = 'is-danger';\n\n  const removeClassIsDanger = () => {\n    const inputClasses = inputRef.current?.classList;\n\n    if (inputClasses?.contains(errorClass)) {\n      inputClasses?.remove(errorClass);\n    }\n  };\n\n  const addClassIsDanger = () => {\n    const inputClasses = inputRef.current?.classList;\n\n    if (!inputClasses?.contains(errorClass)) {\n      inputClasses?.add(errorClass);\n    }\n  };\n\n  const findMovie = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!title) {\n      addClassIsDanger();\n\n      return;\n    }\n\n    try {\n      const movie = await getMovie(title);\n\n      setFoundMovie(movie);\n    } catch (err) {\n      if (errorMsg !== ErrorMessages.NOT_FOUND) {\n        const { message } = err as Error;\n\n        addClassIsDanger();\n        setErrorMsg(message as ErrorMessages);\n        setFoundMovie(null);\n      }\n    }\n  }, [title]);\n\n  const HandleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (errorMsg) {\n      setErrorMsg(ErrorMessages.EMPTY);\n    }\n\n    removeClassIsDanger();\n    setTitle(e.target.value);\n  };\n\n  const handleMovieAdd = () => {\n    if (!foundMovie) {\n      return;\n    }\n\n    const added: boolean = addMovie(foundMovie);\n\n    if (!added) {\n      setErrorMsg(ErrorMessages.ALREADY_EXISTS);\n    }\n\n    setFoundMovie(null);\n    setTitle(ErrorMessages.EMPTY);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={findMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              ref={inputRef}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={title}\n              onChange={HandleInput}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {errorMsg}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleMovieAdd}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie && <MovieCard movie={foundMovie} />}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (movie: Movie): boolean => {\n    const includes = this.state.movies\n      .findIndex(m => m.imdbID === movie.imdbID);\n\n    if (includes >= 0) {\n      return false;\n    }\n\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n\n    return true;\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}